@page "/cards/delete"
@inject Prime.Data.ApplicationDbContext DB
@using Prime.Entities
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Cards</h4>
    <hr />
    @if (cards is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@cards.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Number</dt>
            <dd class="col-sm-10">@cards.Number</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Month</dt>
            <dd class="col-sm-10">@cards.Month</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Year</dt>
            <dd class="col-sm-10">@cards.Year</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CVV</dt>
            <dd class="col-sm-10">@cards.CVV</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Key</dt>
            <dd class="col-sm-10">@cards.Key</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Bank</dt>
            <dd class="col-sm-10">@cards.Bank</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Tagline</dt>
            <dd class="col-sm-10">@cards.Tagline</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Type</dt>
            <dd class="col-sm-10">@cards.Type</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Notes</dt>
            <dd class="col-sm-10">@cards.Notes</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Created</dt>
            <dd class="col-sm-10">@cards.Created</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@cards.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastModified</dt>
            <dd class="col-sm-10">@cards.LastModified</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">LastModifiedBy</dt>
            <dd class="col-sm-10">@cards.LastModifiedBy</dd>
        </dl>
        <EditForm method="post" Model="cards" OnValidSubmit="DeleteCards" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(cards is null)">Delete</button> |
            <a href="/cards">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Cards? cards;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        cards = await DB.Cards.FirstOrDefaultAsync(m => m.Id == Id);

        if (cards is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteCards()
    {
        DB.Cards.Remove(cards!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/cards");
    }
}
